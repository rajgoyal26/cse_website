# Generated by Django 2.0.6 on 2018-06-25 05:32

from django.db import migrations, models
import django.db.models.deletion
import enumerations.enum


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('program', '0001_initial'),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(choices=[('SEM_1', '1st Semester'), ('SEM_2', '2nd Semester'), ('SEM_3', '3rd Semester'), ('SEM_4', '4th Semester'), ('SEM_5', '5th Semester'), ('SEM_6', '6th Semester'), ('SEM_7', '7th Semester'), ('SEM_8', '8th Semester')], default=enumerations.enum.Semester('1st Semester'), max_length=10)),
                ('name', models.CharField(max_length=50)),
                ('course_code', models.CharField(max_length=50)),
                ('course_type', models.CharField(choices=[('M_TH', 'Mandatory Theory'), ('M_LAB', 'Mandatory Lab'), ('ELEC_TH', 'Elective Theory'), ('ELEC_LAB', 'Elective lab'), ('VOL', 'Voluntary')], default=enumerations.enum.CourseType('Mandatory Theory'), max_length=10)),
                ('max_marks', models.IntegerField()),
                ('credits', models.PositiveSmallIntegerField()),
                ('objective', models.TextField()),
                ('syllabus', models.TextField()),
                ('text_books', models.TextField()),
                ('ref_material', models.TextField()),
                ('prerequisite', models.TextField()),
                ('duration', models.DurationField()),
                ('hours', models.DurationField()),
                ('updated_on', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='CourseAvailable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.DateField()),
                ('active', models.BooleanField()),
                ('course', models.ForeignKey(on_delete=None, to='course.Course')),
                ('faculty', models.ForeignKey(on_delete=None, to='user.User')),
            ],
        ),
        migrations.CreateModel(
            name='CourseEnrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField()),
                ('course', models.ForeignKey(on_delete=None, to='course.Course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.User')),
            ],
        ),
        migrations.CreateModel(
            name='CourseFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.DateField()),
                ('active', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=None, to='course.Course')),
            ],
        ),
        migrations.CreateModel(
            name='CourseOutcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('strong_po', models.CharField(max_length=50)),
                ('weak_po', models.CharField(max_length=50)),
                ('course', models.ForeignKey(on_delete=None, to='course.Course')),
            ],
        ),
        migrations.CreateModel(
            name='CourseProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=None, to='course.Course')),
                ('program', models.ForeignKey(on_delete=None, to='program.Program')),
            ],
        ),
    ]
